####################################
# SCons build system for Pedigree
## Tyler Kennedy (AKA Linuxhq AKA TkTech)
####################################

import os.path
Import(['env'])

tmp = env.Clone()

# Change to then name of this module
driverdir = "#" + env["PEDIGREE_BUILD_DRIVERS"]
imagesdir = env["PEDIGREE_IMAGES_DIR"]
objname = driverdir + '/usb-hcd.o'

env.Alias("modules", objname)

# To include a new subdirectory just add to the list.
subdirs = [

]

# To include new files just add to the list, or Glob("*.cpp")
files = [
    "main.cc",
    "Ehci.cc",
    "Ohci.cc"
]

if 'X86_COMMON' in env['CPPDEFINES']:
    files += ['Uhci.cc']

# To include a new directory for includes, just add it to the list
include = [
    '#/src/system/include',
    '#/src/modules/system',
    '.'
]

# To add a library add to the list below
if 'STATIC_DRIVERS' in env['CPPDEFINES']:
    libraries = []
else:
    libraries = ['gcc', 'kernelrtti']

# To add a library path add to the list below
libpaths = [
    imagesdir + 'libraries',
    env['LIBGCC']
]

####################################
SConscript([os.path.join(i, 'SConscript') for i in subdirs],exports = ['tmp'])
tmp.objects = [tmp.Object(i) for i in files]
tmp['CPPPATH'] = [i for i in include]
tmp['LIBS'] = [i for i in libraries]
tmp['LIBPATH'] = [i for i in libpaths]
#^-- Stupid way of doing it but I plan on adding processing.

if not len(files) == 0:
    if "STATIC_DRIVERS" in env['CPPDEFINES']:
        build = tmp.Program(objname,tmp.objects,LINKFLAGS='-nostdlib -Wl,-r')
    else:
        build = tmp.Program(objname,tmp.objects,LINKFLAGS='-nostdlib -Wl,-r -T $LSCRIPT',LSCRIPT=File("#src/modules/link.ld"))
