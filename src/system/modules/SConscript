####################################
# SCons build system for Pedigree
## Tyler Kennedy (AKA Linuxhq AKA TkTech)
####################################

import os.path
Import(['env'])

# Change to then name of this module
objname = 'modules'

# To include a new subdirectory just add to the list.
subdirs = [
	'vfs',
	'ext2',
    'fat',
	'iso9660',
	'network',
	'dhcpclient',
	'console',
	'TUI',
	'linker',
	'users',
	'ramfs',
	'rawfs',
	'init'
]

# TODO: Add installer-specific module

# To include new files just add to the list, or Glob("*.cpp")
files = [
    
]

####################################
# You should never need to touch anything below this line.
# If you do, tell me so I can correct it.
####################################
SConscript([os.path.join(i, 'SConscript') for i in subdirs],exports = ['env'])
env.objects = [env.Object(i) for i in files]
if not len(files) == 0:
    #^-- Prevents 'no input files'
    build = env.Program(objname,env.objects)
	
    # Empty command for a psuedo-target
    env.Command('modules', None, '@echo')

# Ready to generate the initrd... (TODO: Dependencies?)
builddir = env.Dir("#" + env["PEDIGREE_BUILD_BASE"])
initrdDir = env.File("#" + env["PEDIGREE_BUILD_BASE"] + "/initrd.tar")

# TODO: Needs to depend on drivers, but without using explicit driver names... It wants a real
# file though :/

# NOTE: This is *horrendous*! I'll take a look at it when I'm not so tired and fix it up. -Matt
modules = ' '.join([builddir.abspath + '/modules/' + i + '.o' for i in subdirs])
env.Command(initrdDir, None, '@tar --absolute-names --transform="s,/.*/,," -czf $TARGET ' + builddir.abspath + '/drivers/* ' + modules)
