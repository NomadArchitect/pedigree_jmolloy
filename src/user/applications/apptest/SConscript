####################################
# SCons build system for Pedigree
## Tyler Kennedy (AKA Linuxhq AKA TkTech)
####################################

import os.path
Import(['env'])

tmp = env.Clone()

appdir = "#" + env["PEDIGREE_BUILD_APPS"]
builddir = "#" + env["PEDIGREE_BUILD_BASE"]
kerneldir = "#" + env["PEDIGREE_BUILD_KERNEL"]
objname = appdir + '/apptest'

# Part of the apps target
env.Alias("apps", objname)

# We must be rebuilt if the CRT0 changes, but because libc/libm are shared
# objects there's no need to rebuild if they change - we just require that
# they exist when we build.
env.Depends(objname, "crt0")
env.Requires(objname, "libs")

# To include a new subdirectory just add to the list.
subdirs = [

]

# To include new files just add to the list, or Glob("*.cpp")
files = [
    Glob("*.cc")
]

# Already-built object files to link
objects = [
#    kerneldir + '/crt0.o',
]

# To include a new directory for includes, just add it to the list
if env['ARCH_TARGET'] == 'X86':
    include = ['#/src/subsys/native/include']
else:
    include = ['#/src/subsys/posix/include']
include += ['.']

# To add a library add to the list below
if env['ARCH_TARGET'] == 'X86':
    libraries = ['pedigree', 'supc++']
else:
    libraries = ['c', 'm', 'gcc', 'supc++']

# To add a library path add to the list below
libpaths = [
    builddir
]

####################################
SConscript([os.path.join(i, 'SConscript') for i in subdirs],exports = ['tmp'])
tmp.objects = [tmp.Object(i) for i in files] + [tmp.File(i) for i in objects]
tmp['CPPPATH'] = [i for i in include]
tmp['LIBS'] = [i for i in libraries]
tmp['LIBPATH'] = [i for i in libpaths]
#^-- Stupid way of doing it but I plan on adding processing.

if not len(files) == 0:
    build = tmp.Program(objname,tmp.objects,LINKFLAGS='')
