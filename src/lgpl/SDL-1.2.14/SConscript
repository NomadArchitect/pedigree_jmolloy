####################################
# SCons build system for Pedigree
## Tyler Kennedy (AKA Linuxhq AKA TkTech)
####################################

import os.path
Import(['env'])

# Temporary copy of the global environment so we can fiddle with flags
tmpEnvironment = env.Clone()

# Change to then name of this module
builddir = "#" + env["PEDIGREE_BUILD_BASE"]
imagesdir = env["PEDIGREE_IMAGES_DIR"]
objname = builddir + '/libSDL.a'
sobjname = builddir + '/libSDL.so'

# To include a new subdirectory just add to the list.
subdirs = [
    
]

# To include new files just add to the list, or Glob("*.cpp")
files = [
    Glob('src/*.c'),
    Glob('src/hermes/*.asm'),
    Glob('src/audio/*.c'),
    Glob('src/cdrom/*.c'),
    Glob('src/cpuinfo/*.c'),
    Glob('src/events/*.c'),
    Glob('src/file/*.c'),
    Glob('src/joystick/*.c'),
    Glob('src/stdlib/*.c'),
    Glob('src/thread/*.c'),
    Glob('src/timer/*.c'),
    Glob('src/video/*.c'),
    Glob('src/audio/dummy/*.c'),
    Glob('src/video/pedigree/*.c'),
    Glob('src/video/pedigree/*.cc'),
    Glob('src/joystick/dummy/*.c'),
    Glob('src/cdrom/dummy/*.c'),
    Glob('src/thread/pthread/*.c'),
    Glob('src/timer/unix/*.c'),
    Glob('src/loadso/dlopen/*.c'),
]

# To include a new directory for includes, just add it to the list
include = [
    './include',
    '#/src/subsys/posix/include',
    '#/src/subsys/native/include',
    '#/src/user/libraries/libui/include',
]

cppinclude = include + [
    '#/images/local/support/gcc/include/c++/4.5.1',
    '#/images/local/support/gcc/include/c++/4.5.1/i686-pedigree',
]

# To add a library add to the list below
libraries = [
    'gcc',
    'c',
    'm',
    'ui',
    'pedigree',
    'pedigree-c',
    'pthread',
    'stdc++',
]

# To add a library path add to the list below
libpaths = [
    '#',
    imagesdir + 'libraries',
    builddir,
    builddir + '/libs',
]

def fixFlags(f):
    f = f.replace('-mcmodel=kernel', '-mcmodel=small')
    f = f.replace('-mno-sse', '')
    f = f.replace('-mno-mmx', '')
    f = f.replace('-mno-red-zone', '')
    return f

tmpEnvironment['CFLAGS'] = fixFlags(tmpEnvironment['CFLAGS'])
tmpEnvironment['CXXFLAGS'] = fixFlags(tmpEnvironment['CXXFLAGS'])
tmpEnvironment['CPPPATH'] = cppinclude
tmpEnvironment['LIBS'] = libraries
tmpEnvironment['LIBPATH'] = libpaths
tmpEnvironment['CPPDEFINES'] += ['PEDIGREE']
tmpEnvironment['ASFLAGS'] += ' -I' + env.Dir('#src/lgpl/SDL-1.2.14/src/hermes').path + '/ '

if env['ARCH_TARGET'] in ['X86']:
    tmpEnvironment.SharedLibrary(sobjname, files, LINKFLAGS="")
tmpEnvironment.Library(objname, files, LINKFLAGS="")

env.Alias(sobjname, 'libs')
env.Alias(objname, 'libs')

SConscript([os.path.join(i, 'SConscript') for i in subdirs],exports = ['env'])
